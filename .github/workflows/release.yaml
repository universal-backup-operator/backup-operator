#  ┬─┐┬─┐┬  ┬─┐┬─┐┐─┐┬─┐
#  │┬┘├─ │  ├─ │─┤└─┐├─ 
#  ┘└┘┴─┘┘─┘┴─┘┘ ┘──┘┴─┘

name: Release

on:
  push:
    tags:
      - v*

permissions:
  packages: write
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache restore
        uses: actions/cache/restore@v4
        with:
          key: ${{ github.sha }}
          path: |-
            src/dist
            docker-images.txt
          fail-on-cache-miss: true

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Create extra-release-files directory
        run: mkdir extra-release-files

      - name: Version without a v
        id: version
        run: >-
          echo "${{ github.ref_name }}" | sed -r 's/^v//g' |
          xargs printf "version=%s" >> "$GITHUB_OUTPUT"

      #  ┬┌ ┬ ┐┐─┐┌┐┐┌─┐┌┌┐o┌─┐┬─┐
      #  ├┴┐│ │└─┐ │ │ │││││┌─┘├─ 
      #  ┘ ┘┘─┘──┘ ┘ ┘─┘┘ ┘┘└─┘┴─┘

      - name: Update image tag
        uses: mikefarah/yq@v4
        env:
          TEMPLATE: |-
            .images += {
              "name": "registry.local/backup-operator",
              "newname": "ghcr.io/${{ github.repository }}",
              "newTag": "${{ steps.version.outputs.version }}"
            }
        with:
          cmd: yq -i "$TEMPLATE" src/config/manager/kustomization.yaml

      - name: Kustomize Build
        run: kustomize build src/config/default | tee extra-release-files/install.yaml

      - name: CRDs Build
        run: cat src/config/crd/bases/* | tee extra-release-files/crds.yaml

      #  ┬─┐┬─┐┬  ┬─┐┬─┐┐─┐┬─┐
      #  │┬┘├─ │  ├─ │─┤└─┐├─ 
      #  ┘└┘┴─┘┘─┘┴─┘┘ ┘──┘┴─┘

      - name: Check release tag
        uses: mikefarah/yq@v4
        with:
          cmd: |-
            if [[ '${{ steps.version.outputs.version }}' =~ -rc ]]; then
              echo "::notice::Marking as not latest"
              yq -i '.release += {"make_latest":false}' src/.goreleaser.yaml
            fi

      - name: Copy LICENSE and README.md to src/
        run: cp -fv LICENSE README.md src/

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          workdir: src
          distribution: goreleaser
          args: release --fail-fast --skip=docker,validate
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Docker create manifest
        run: >-
          cat docker-images.txt |
          xargs docker buildx imagetools create --tag 'ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}'

      #  ┬ ┬┬─┐┬  ┌┌┐
      #  │─┤├─ │  │││
      #  ┘ ┴┴─┘┘─┘┘ ┘

      - name: Package chart
        run: |-
          helm package \
            --dependency-update \
            --app-version="${{ steps.version.outputs.version }}" \
            --version="${{ steps.version.outputs.version }}" \
            charts/backup-operator
        env:
          HELM_EXPERIMENTAL_OCI: "1"

      - name: Push chart
        run: |-
          helm push \
            backup-operator-${{ steps.version.outputs.version }}.tgz \
            'oci://ghcr.io/${{ github.repository }}/helm-charts'
        env:
          HELM_EXPERIMENTAL_OCI: "1"
